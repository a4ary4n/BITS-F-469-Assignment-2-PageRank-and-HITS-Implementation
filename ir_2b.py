# -*- coding: utf-8 -*-
"""IR-2B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dpILpadUiKRvkDYZEr_CBzTcxiNGYmJQ
"""

import numpy as np
import numpy.linalg as la
import networkx as nx
from google.colab import drive
import timeit
drive.mount('/content/gdrive')

g=nx.read_gpickle('/content/gdrive/MyDrive/web_graph.gpickle')

data = []
for i in range(100):
  data.append(g.nodes[i]['page_content'])
#g.nodes[50]['page_content']

query = input("Enter query:")
r_set = []
b_set = []

for i in data:
  if i.find(query) != -1:
    r_set.append(data.index(i) + 1)
    b_set.append(data.index(i) + 1)

for i in r_set:
  ineds = g.in_edges(i)
  oeds = g.out_edges(i)
  for j in ineds:
    if j not in b_set:
      b_set.append(j[0])
  for j in oeds:
    if j not in b_set:
      b_set.append(j[1])

print(r_set)
print(b_set)

adj_mat = []
for i in b_set:
  row = []
  for j in b_set:
    if (i,j) in list(g.edges):
      row.append(1)
    else:
      row.append(0)
  adj_mat.append(row)
#print(adj_mat)
adj_mat = np.array(adj_mat)
trans_adj_mat = adj_mat.T
#print(adj_mat)
#print(trans_adj_mat)

u = np.ones(len(b_set))
v = np.ones(len(b_set))

start = timeit.default_timer()

lastU = u
u = np.dot(adj_mat, v)
while la.norm(lastU - u) > 0.01 :
        lastU = u
        u = np.dot(adj_mat, v)
        u /= la.norm(u)

lastV = v
v = np.dot(trans_adj_mat, u)

while la.norm(lastV - v) > 0.01 :
        lastV = v
        v = np.dot(trans_adj_mat, u)
        v /= la.norm(v)

stop = timeit.default_timer()
#u = (adj_mat @ u)/la.norm(u)
#v = (trans_adj_mat @ v)/la.norm(v)

print("hub_scores:", end = "\n")
indx = 0
while(indx < len(b_set)):
  print(b_set[indx], end="\t")
  print(100*u[indx], end = "\n")
  indx += 1

print("authority_scores:", end = "\n")
indx = 0
while(indx < len(b_set)):
  print(b_set[indx], end="\t")
  print(100*v[indx], end = "\n")
  indx += 1
print("time:"+str(stop - start))